{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Documents/create-react-app-master/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/Documents/create-react-app-master/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/Documents/create-react-app-master/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/Documents/create-react-app-master/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/Documents/create-react-app-master/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/Documents/create-react-app-master/my-app/src/shared/components/Itemlist.js\";\nimport React, { Component } from 'react'; // class app extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             items: [\n//                 {\n//                     id: 1,\n//                     label: 'List item 1'\n//                 },\n//                 {\n//                     id: 2,\n//                     label: 'List item 2'\n//                 },\n//                 {\n//                     id: 3,\n//                     label: 'List item 3'\n//                 },\n//                 {\n//                     id: 4,\n//                     label: 'List item 4'\n//                 }\n//             ],\n//             hasErrored: false,\n//             isLoading: false\n//         };\n//     }\n//     render() {\n//         if (this.state.hasErrored) {\n//             return <p>Sorry! There was an error loading the items</p>;\n//         }\n//         if (this.state.isLoading) {\n//             return <p>Loading…</p>;\n//         }\n//         return (\n//             <ul>\n//                 {this.state.items.map((item) => (\n//                     <li key={item.id}>\n//                         {item.label}\n//                     </li>\n//                 ))}\n//             </ul>\n//         );\n//     }\n// }\n\nvar app =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(app, _Component);\n\n  function app() {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(app).call(this));\n    _this.state = {\n      items: [{\n        id: 1,\n        label: 'List item 1'\n      }, {\n        id: 2,\n        label: 'List item 2'\n      }, {\n        id: 3,\n        label: 'List item 3'\n      }, {\n        id: 4,\n        label: 'List item 4'\n      }],\n      hasErrored: false,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.hasErrored) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Sorry! There was an error\");\n      }\n\n      if (this.props.isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Loading\\u2026\");\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.items.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, item.label);\n      }));\n    }\n  }]);\n\n  return app;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchData: function fetchData(url) {\n      return dispatch(itemsFetchData(url));\n    }\n  };\n};\n\nexport default app;","map":{"version":3,"sources":["/Users/andrew/Documents/create-react-app-master/my-app/src/shared/components/Itemlist.js"],"names":["React","Component","app","state","items","id","label","hasErrored","isLoading","props","map","item","mapStateToProps","itemsHasErrored","itemsIsLoading","mapDispatchToProps","dispatch","fetchData","url","itemsFetchData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;AACI,UAAKC,KAAL,GAAa;AACbC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADG,EAKH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OALG,EASH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OATG,EAaH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE;AAFX,OAbG,CADM;AAmBbC,MAAAA,UAAU,EAAE,KAnBC;AAoBbC,MAAAA,SAAS,EAAE;AApBE,KAAb;AAFM;AAwBb;;;;6BAGQ;AACL,UAAI,KAAKC,KAAL,CAAWF,UAAf,EAA2B;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACH;;AAED,UAAI,KAAKE,KAAL,CAAWD,SAAf,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWL,KAAX,CAAiBM,GAAjB,CAAqB,UAACC,IAAD;AAAA,eAClB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKM,IAAI,CAACL,KADV,CADkB;AAAA,OAArB,CADL,CADJ;AASH;;;;EA9CaL,S;;AAiDlB,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACT,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHG,IAAAA,UAAU,EAAEJ,KAAK,CAACU,eAFf;AAGHL,IAAAA,SAAS,EAAEL,KAAK,CAACW;AAHd,GAAP;AAKH,CAND;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,SAAS,EAAE,mBAACC,GAAD;AAAA,aAASF,QAAQ,CAACG,cAAc,CAACD,GAAD,CAAf,CAAjB;AAAA;AADR,GAAP;AAGH,CAJD;;AAMA,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\n\n// class app extends Component {\n//     constructor() {\n//         super();\n\n//         this.state = {\n//             items: [\n//                 {\n//                     id: 1,\n//                     label: 'List item 1'\n//                 },\n//                 {\n//                     id: 2,\n//                     label: 'List item 2'\n//                 },\n//                 {\n//                     id: 3,\n//                     label: 'List item 3'\n//                 },\n//                 {\n//                     id: 4,\n//                     label: 'List item 4'\n//                 }\n//             ],\n//             hasErrored: false,\n//             isLoading: false\n//         };\n//     }\n\n//     render() {\n//         if (this.state.hasErrored) {\n//             return <p>Sorry! There was an error loading the items</p>;\n//         }\n\n//         if (this.state.isLoading) {\n//             return <p>Loading…</p>;\n//         }\n\n//         return (\n//             <ul>\n//                 {this.state.items.map((item) => (\n//                     <li key={item.id}>\n//                         {item.label}\n//                     </li>\n//                 ))}\n//             </ul>\n//         );\n//     }\n// }\nclass app extends Component {\n    constructor() {\n        super();\n            this.state = {\n            items: [\n                {\n                    id: 1,\n                    label: 'List item 1'\n                },\n                {\n                    id: 2,\n                    label: 'List item 2'\n                },\n                {\n                    id: 3,\n                    label: 'List item 3'\n                },\n                {\n                    id: 4,\n                    label: 'List item 4'\n                }\n            ],\n            hasErrored: false,\n            isLoading: false\n        };\n    }\n    \n\n    render() {\n        if (this.props.hasErrored) {\n            return <p>Sorry! There was an error</p>;\n        }\n\n        if (this.props.isLoading) {\n            return <p>Loading…</p>;\n        }\n\n        return (\n            <ul>\n                {this.props.items.map((item) => (\n                    <li key={item.id}>\n                        {item.label}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.items,\n        hasErrored: state.itemsHasErrored,\n        isLoading: state.itemsIsLoading\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (url) => dispatch(itemsFetchData(url))\n    };\n};\n\nexport default app;"]},"metadata":{},"sourceType":"module"}